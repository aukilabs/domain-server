services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
  letsencrypt:
    image: nginxproxy/acme-companion
    restart: unless-stopped
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
  postgres:
    image: postgres:16-alpine
    volumes:
      - ./domain-server/postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: domain-server
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test -d domain-server" ]
      interval: 1s
      timeout: 5s
      retries: 5
  domain-server:
    image: aukilabs/domain-server:stable
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - ./domain-server/domain-data:/app/data/domain-data
      - ./domain-server-private.key:/domain-server-private.key:ro
    environment:
      - VIRTUAL_HOST=domains.example.com
      - VIRTUAL_PORT=4000
      - LETSENCRYPT_HOST=domains.example.com
      - DS_POSTGRES_URL=postgres://test:test@postgres/domain-server?sslmode=disable
      - DS_OPERATION_MODE=dedicated
      - DS_LOG_LEVEL=info
      - DS_ADDR=:4000
      - DS_PUBLIC_URL=https://domains.example.com
      - DS_REGISTRATION_CREDENTIALS=copy_from_console
      - DS_STORAGE_LOCAL_PATH=/app/data/domain-data
      - DS_WALLET_PRIVATE_KEY_FILE_PATH=/domain-server-private.key
volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:
